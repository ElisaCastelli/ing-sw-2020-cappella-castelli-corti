package it.polimi.ingsw.server.model.gameComponents;

import java.io.Serializable;
import java.util.ArrayList;

/**
 * This class represents the board where the game will be played
 */
public class Board implements Serializable{

    /**
     * Static attribute that indicates the number of rows and columns of  matrix that represents the board
     */
    private final int DIM = 5;
    /**
     * Matrix of boxes that represents the playing board
     */
    private final Box[][] matrix;

    /**
     * Constructor without parameters
     */
    public Board(){
        matrix = new Box[DIM][DIM];
        for(int i=0; i < DIM; i++){
            for(int j = 0; j < DIM; j++){
                matrix[i][j] = new Box(i, j);
            }
        }
        setBoxesNext();
    }


    public void setBoxesNext(){
        for(int i=0; i < DIM; i++){
            for(int j = 0; j < DIM; j++){
                matrix[i][j].setBoxesNextTo(getBoxesNextTo(i,j));
            }
        }
    }

    /**
     * This method launches the method clear for each box of the matrix
     */
    public void clear(){
        for(int i = 0; i < DIM; i++){
            for(int j = 0; j < DIM; j++){
                matrix[i][j].clear();
            }
        }
    }


    /**
     * @return true if each box of the matrix is empty else return false
     */
    public boolean isEmpty(){
        boolean trovato = false;
        int i = 0, j = 0;
        while(!trovato && i < DIM){
                while(!trovato && j < DIM){
                    if(matrix[i][j].isEmpty()){
                        trovato = true;
                    }
                    j++;
                }
                i++;
        }
        return trovato;
    }

    /**
     *
     * @param row indicates the row of the box in the matrix i want
     * @param column indicates the column of the box in the matrix i want
     * @return the box in position matrix[row][column]
     */
    public Box getBox(int row, int column){
        return matrix[row][column];
    }

    //Quinta pos Ã¨ quella che ho chiesto
    public ArrayList<Box> getBoxesNextTo(int row, int column){
        ArrayList<Box> nextTo = new ArrayList<>();
        for(int r = row-1 ; r <= row+1; r++){
            for(int c = column-1; c <= column+1; c++){
                if(!(r==row && c==column)){
                    if( r>=0 && r<5 && c>=0 && c<5 ){
                        nextTo.add(getBox(r,c));
                    }
                    else
                        nextTo.add(null);
                }
            }
        }
        return nextTo;
    }

    /**
     * This method prints the content of the entire board
     */
    public void print(){
        System.out.println();
        System.out.println();
        System.out.println(" "+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "0"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "1"+ " "+" "+ " "+ " "+ " "+ " "+ " "+ "2"+ " "+" "+ " "+ " "+ " "+ " "+ " "+ "3"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "4"+ " "+ " "+ " "+ " ");
        System.out.println(" "+ " "+ " "+ " "+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+"#"+ "#"+ "#"+ "#"+ "#"+ "#"+"#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+"#"+ "#"+ "#");
        System.out.println(" "+ " "+ " "+ " "+ "||"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+" "+ " "+" "+ " "+ " "+ " "+ " "+ "||");
        System.out.println(" "+ " "+ "0"+ " "+ "||"+ " "+ " "+ " "+matrix[0][0].print()+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+matrix[0][1].print()+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+matrix[0][2].print()+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+matrix[0][3].print()+ " "+ " "+ " "+ "|"+" "+ " "+" "+matrix[0][4].print()+ " "+ " "+ " "+ "||");
        System.out.println(" "+ " "+ " "+ " "+ "||"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+" "+ " "+" "+ " "+ " "+ " "+ " "+ "||");
        System.out.println(" "+ " "+ " "+ " "+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+"#"+ "#"+ "#"+ "#"+ "#"+ "#"+"#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+"#"+ "#"+ "#");
        System.out.println(" "+ " "+ " "+ " "+ "||"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+" "+ " "+" "+ " "+ " "+ " "+ " "+ "||");
        System.out.println(" "+ " "+ "1"+ " "+ "||"+ " "+ " "+ " "+matrix[1][0].print()+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+matrix[1][1].print()+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+matrix[1][2].print()+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+matrix[1][3].print()+ " "+ " "+ " "+ "|"+" "+ " "+" "+matrix[1][4].print()+ " "+ " "+ " "+ "||");
        System.out.println(" "+ " "+ " "+ " "+ "||"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+" "+ " "+" "+ " "+ " "+ " "+ " "+ "||");
        System.out.println(" "+ " "+ " "+ " "+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+"#"+ "#"+ "#"+ "#"+ "#"+ "#"+"#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+"#"+ "#"+ "#");
        System.out.println(" "+ " "+ " "+ " "+ "||"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+" "+ " "+" "+ " "+ " "+ " "+ " "+ "||");
        System.out.println(" "+ " "+ "2"+ " "+ "||"+ " "+ " "+ " "+matrix[2][0].print()+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+matrix[2][1].print()+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+matrix[2][2].print()+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+matrix[2][3].print()+ " "+ " "+ " "+ "|"+" "+ " "+" "+matrix[2][4].print()+ " "+ " "+ " "+ "||");
        System.out.println(" "+ " "+ " "+ " "+ "||"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+" "+ " "+" "+ " "+ " "+ " "+ " "+ "||");
        System.out.println(" "+ " "+ " "+ " "+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+"#"+ "#"+ "#"+ "#"+ "#"+ "#"+"#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#");
        System.out.println(" "+ " "+ " "+ " "+ "||"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+" "+ " "+" "+ " "+ " "+ " "+ " "+ "||");
        System.out.println(" "+ " "+ "3"+ " "+ "||"+ " "+ " "+ " "+matrix[3][0].print()+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+matrix[3][1].print()+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+matrix[3][2].print()+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+matrix[3][3].print()+ " "+ " "+ " "+ "|"+" "+ " "+" "+matrix[3][4].print()+ " "+ " "+ " "+ "||");
        System.out.println(" "+ " "+ " "+ " "+ "||"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+" "+ " "+" "+ " "+ " "+ " "+ " "+ "||");
        System.out.println(" "+ " "+ " "+ " "+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+"#"+ "#"+ "#"+ "#"+ "#"+ "#"+"#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+"#"+ "#");
        System.out.println(" "+ " "+ " "+ " "+ "||"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+" "+ " "+" "+ " "+ " "+ " "+ " "+ "||");
        System.out.println(" "+ " "+ "4"+ " "+ "||"+ " "+ " "+ " "+matrix[4][0].print()+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+matrix[4][1].print()+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+matrix[4][2].print()+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+matrix[4][3].print()+ " "+ " "+ " "+ "|"+" "+ " "+" "+matrix[4][4].print()+ " "+ " "+ " "+ "||");
        System.out.println(" "+ " "+ " "+ " "+ "||"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+" "+ " "+" "+ " "+ " "+ " "+ " "+ "||");
        System.out.println(" "+ " "+ " "+ " "+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+"#"+ "#"+ "#"+ "#"+ "#"+ "#"+"#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+"#"+ "#");
        System.out.println();
        System.out.println();



    }
    /**
     * This method prints the content of the entire board with the reachable
     */
    public void printReachable() {
        System.out.println();
        System.out.println();
        System.out.println(" "+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "0"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "1"+ " "+" "+ " "+ " "+ " "+ " "+ " "+ "2"+ " "+" "+ " "+ " "+ " "+ " "+ " "+ "3"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "4"+ " "+ " "+ " "+ " ");
        System.out.println(" "+ " "+ " "+ " "+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+"#"+ "#"+ "#"+ "#"+ "#"+ "#"+"#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+"#"+ "#"+ "#");
        System.out.println(" "+ " "+ " "+ " "+ "||"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+" "+ " "+" "+ " "+ " "+ " "+ " "+ "||");
        System.out.println(" "+ " "+ "0"+ " "+ "||"+ " "+ " "+ " "+matrix[0][0].printReachable()+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+matrix[0][1].printReachable()+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+matrix[0][2].printReachable()+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+matrix[0][3].printReachable()+ " "+ " "+ " "+ "|"+" "+ " "+" "+matrix[0][4].printReachable()+ " "+ " "+ " "+ "||");
        System.out.println(" "+ " "+ " "+ " "+ "||"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+" "+ " "+" "+ " "+ " "+ " "+ " "+ "||");
        System.out.println(" "+ " "+ " "+ " "+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+"#"+ "#"+ "#"+ "#"+ "#"+ "#"+"#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+"#"+ "#"+ "#");
        System.out.println(" "+ " "+ " "+ " "+ "||"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+" "+ " "+" "+ " "+ " "+ " "+ " "+ "||");
        System.out.println(" "+ " "+ "1"+ " "+ "||"+ " "+ " "+ " "+matrix[1][0].printReachable()+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+matrix[1][1].printReachable()+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+matrix[1][2].printReachable()+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+matrix[1][3].printReachable()+ " "+ " "+ " "+ "|"+" "+ " "+" "+matrix[1][4].printReachable()+ " "+ " "+ " "+ "||");
        System.out.println(" "+ " "+ " "+ " "+ "||"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+" "+ " "+" "+ " "+ " "+ " "+ " "+ "||");
        System.out.println(" "+ " "+ " "+ " "+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+"#"+ "#"+ "#"+ "#"+ "#"+ "#"+"#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+"#"+ "#"+ "#");
        System.out.println(" "+ " "+ " "+ " "+ "||"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+" "+ " "+" "+ " "+ " "+ " "+ " "+ "||");
        System.out.println(" "+ " "+ "2"+ " "+ "||"+ " "+ " "+ " "+matrix[2][0].printReachable()+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+matrix[2][1].printReachable()+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+matrix[2][2].printReachable()+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+matrix[2][3].printReachable()+ " "+ " "+ " "+ "|"+" "+ " "+" "+matrix[2][4].printReachable()+ " "+ " "+ " "+ "||");
        System.out.println(" "+ " "+ " "+ " "+ "||"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+" "+ " "+" "+ " "+ " "+ " "+ " "+ "||");
        System.out.println(" "+ " "+ " "+ " "+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+"#"+ "#"+ "#"+ "#"+ "#"+ "#"+"#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#");
        System.out.println(" "+ " "+ " "+ " "+ "||"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+" "+ " "+" "+ " "+ " "+ " "+ " "+ "||");
        System.out.println(" "+ " "+ "3"+ " "+ "||"+ " "+ " "+ " "+matrix[3][0].printReachable()+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+matrix[3][1].printReachable()+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+matrix[3][2].printReachable()+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+matrix[3][3].printReachable()+ " "+ " "+ " "+ "|"+" "+ " "+" "+matrix[3][4].printReachable()+ " "+ " "+ " "+ "||");
        System.out.println(" "+ " "+ " "+ " "+ "||"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+" "+ " "+" "+ " "+ " "+ " "+ " "+ "||");
        System.out.println(" "+ " "+ " "+ " "+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+"#"+ "#"+ "#"+ "#"+ "#"+ "#"+"#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+"#"+ "#");
        System.out.println(" "+ " "+ " "+ " "+ "||"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+" "+ " "+" "+ " "+ " "+ " "+ " "+ "||");
        System.out.println(" "+ " "+ "4"+ " "+ "||"+ " "+ " "+ " "+matrix[4][0].printReachable()+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+matrix[4][1].printReachable()+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+matrix[4][2].printReachable()+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+matrix[4][3].printReachable()+ " "+ " "+ " "+ "|"+" "+ " "+" "+matrix[4][4].printReachable()+ " "+ " "+ " "+ "||");
        System.out.println(" "+ " "+ " "+ " "+ "||"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+ " "+ " "+ " "+ " "+ " "+ " "+ " "+ "|"+" "+ " "+" "+ " "+ " "+ " "+ " "+ "||");
        System.out.println(" "+ " "+ " "+ " "+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+"#"+ "#"+ "#"+ "#"+ "#"+ "#"+"#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+ "#"+"#"+ "#");
        System.out.println();
        System.out.println();
    }

    public void clearReachable(){
        for(int i = 0; i < DIM; i++){
            for(int j = 0; j < DIM; j++){
                matrix[i][j].clearBoxesNextTo();
            }
        }
    }

}
